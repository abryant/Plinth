package foo.bar;

class Test
{
  Test(uint a)
  {
    stderr::println("Test(uint)");
  }
  Test(short c)
  {
    stderr::println("Test(short)");
  }
  Test(?ubyte b)
  {
    stderr::println("Test(?ubyte)");
  }

  static uint main([]string args)
  {
    stdout::print("Please enter your name: ");
    string line = stdin::readLine();
    // remove the newline
    line = line.substring(0, line.length() - 1);
    stdout::println("Hello, " + line + "!");

    // find all of the command line arguments
    string fullargs = concatMap(addSpace, args);
    stdout::println("Your " + args.length.toString() + " arguments were:" + fullargs);

    stdout::println("0.00000000123456789 = " + 0.00000000123456789.toString());
    stdout::println("maths::abs(-1) = " + maths::abs(-1).toString());
    new Test(2);
    return args.length;
  }

  static string concatMap({string -> string} f, []string input)
  {
    string result = string();
    for (uint i = 0; i < input.length; ++i)
    {
      result += f(input[i]);
    }
    return result;
  }

  static string addSpace(string x)
  {
    return " " + x;
  }
}
