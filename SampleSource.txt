uint main(uint argc)
{
  [][]ubyte bytes = new [2][4]ubyte;
  []boolean bools = new []boolean {true, false};
  bools[0], bools[1] = bools[1], bools[0];
  (uint, []ubyte) i, ls = 12345, bytes[1];
  ushort a, b = cast<ushort> argc, 500;
  //a, b = b, a;
  i, bytes[0] = bytes.length, bytes[0];
  (uint, short) f = 34, 29;
  (ushort) x, _ = a, a;
  ((ushort)) y, _ = x, x;

  []uint temp = new [1]uint;
  []long arr = new [2]long;
  // should put 27 in temp[0], due to the order of evaluation of the function calls in an array assignment
  array(arr, temp)[dimension(temp)] = value(temp);
  return temp[0] + y!1!1;
}

uint foo()
{
  [][]short ss = new [0][20]short;
  return 1;
}

[]long array([]long arr, []uint temp)
{
  temp[0] = 4 * temp[0] + 1;
  return arr;
}

uint dimension([]uint temp)
{
  temp[0] = 4 * temp[0] + 2;
  return 0;
}
long value([]uint temp)
{
  temp[0] = 4 * temp[0] + 3;
  return 123;
}
