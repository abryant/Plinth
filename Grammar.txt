CompilationUnit = Functions
Functions = Function | Functions Function

Function = Type Name LParen Parameters RParen Block
         | Type Name LParen            RParen Block
Parameters = Type Name | Parameters Comma Type Name

Block = LBrace Statements RBrace

Statements = epsilon | Statements Statement
Statement = Assignment | Block | IfStatement | ReturnStatement | VariableDefinition | WhileStatement

Assignment = Name Equals Expression Semicolon
IfStatement = IfKeyword Expression Block | IfKeyword Expression Block ElseKeyword Block | IfKeyword Expression Block ElseKeyword IfStatement
ReturnStatement = ReturnKeyword Expression Semicolon
VariableDefinition = Type Name Semicolon | Type Name Equals Expression Semicolon
WhileStatement = WhileKeyword Expression Block

Type = BooleanKeyword | DoubleKeyword | IntKeyword

Expression = AdditiveExpression |
             AdditiveExpression DoubleEquals          AdditiveExpression |
             AdditiveExpression ExclamationMarkEquals AdditiveExpression |
             AdditiveExpression LAngle                AdditiveExpression |
             AdditiveExpression LAngleEquals          AdditiveExpression |
             AdditiveExpression RAngle                AdditiveExpression |
             AdditiveExpression RAngleEquals          AdditiveExpression
AdditiveExpression = MultiplicativeExpression |
                     AdditiveExpression Plus MultiplicativeExpression |
                     AdditiveExpression Minus MultiplicativeExpression
MultiplicativeExpression = UnaryExpression |
                           MultiplicativeExpression Star          UnaryExpression |
                           MultiplicativeExpression ForwardSlash  UnaryExpression |
                           MultiplicativeExpression Percent       UnaryExpression |
                           MultiplicativeExpression DoublePercent UnaryExpression
UnaryExpression = Primary |
                  CastKeyword LAngle Type RAngle UnaryExpression
Primary = IntegerLiteral | DoubleLiteral | TrueKeyword | FalseKeyword |
          Name |
          Name LParen Arguments RParen | Name LParen RParen |
          LParen Expression RParen
Arguments = Expression | Arguments Comma Expression
