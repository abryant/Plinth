CompilationUnit = epsilon | CompilationUnit Function | CompilationUnit CompoundTypeDef

CompoundTypeDef = CompoundKeyword Name LBrace Members RBrace
Members = epsilon | Members Member
Member = Type Name Semicolon |
         Name LParen Parameters RParen Block

Function = ReturnType Name LParen Parameters RParen Block
         | ReturnType Name LParen            RParen Block
Parameters = Type Name | Parameters Comma Type Name

Block = LBrace Statements RBrace

Statements = epsilon | Statements Statement
Statement = Assignment | Block | BreakStatement | ContinueStatement | ForStatement | IfStatement | PrefixIncDecStatement | ReturnStatement | WhileStatement |
            FunctionCallExpression Semicolon

Assignee = Name |
           Primary LSquare TupleExpression RSquare |
           Underscore
AssigneeList = Assignee | AssigneeList Comma Assignee

Assignment = Type AssigneeList Semicolon | Type AssigneeList Equals TupleExpression Semicolon | AssigneeList Equals TupleExpression Semicolon
BreakStatement = BreakKeyword Semicolon | BreakKeyword IntegerLiteral Semicolon
ContinueStatement = ContinueKeyword Semicolon | ContinueKeyword IntegerLiteral Semicolon
IfStatement = IfKeyword TupleExpression Block | IfKeyword TupleExpression Block ElseKeyword Block | IfKeyword TupleExpression Block ElseKeyword IfStatement
PrefixIncDecStatement = DoublePlus Assignee Semicolon | DoubleMinus Assignee Semicolon
ReturnStatement = ReturnKeyword TupleExpression Semicolon | ReturnKeyword Semicolon
WhileStatement = WhileKeyword TupleExpression Block

ForInit = Assignment | Semicolon
ForUpdate = DoublePlus Assignee | DoubleMinus Assignee | AssigneeList Equals TupleExpression | FunctionCallExpression | epsilon
ForStatement = ForKeyword LParen ForInit TupleExpression Semicolon ForUpdate RParen Block
             | ForKeyword LParen ForInit Semicolon ForUpdate RParen Block

Type = BooleanKeyword |
       DoubleKeyword  | FloatKeyword  |
       ULongKeyword   | LongKeyword   |
       UIntKeyword    | IntKeyword    |
       UShortKeyword  | ShortKeyword  |
       UByteKeyword   | ByteKeyword   |
       Name |
       LSquare RSquare Type |
       LParen TypeList RParen
ReturnType = Type | VoidKeyword
TypeList = Type | TypeList Comma Type


TupleExpression = Expression | TupleExpression Comma Expression
Expression = LogicalExpression | LogicalExpression QuestionMark TupleExpression Colon Expression
LogicalExpression = ComparisonExpression |
                    LogicalExpression Ampersand       ComparisonExpression |
                    LogicalExpression Pipe            ComparisonExpression |
                    LogicalExpression Caret           ComparisonExpression |
                    LogicalExpression DoubleAmpersand ComparisonExpression |
                    LogicalExpression DoublePipe      ComparisonExpression
ComparisonExpression = AdditiveExpression |
                       AdditiveExpression DoubleEquals          AdditiveExpression |
                       AdditiveExpression ExclamationMarkEquals AdditiveExpression |
                       AdditiveExpression LAngle                AdditiveExpression |
                       AdditiveExpression LAngleEquals          AdditiveExpression |
                       AdditiveExpression RAngle                AdditiveExpression |
                       AdditiveExpression RAngleEquals          AdditiveExpression
AdditiveExpression = MultiplicativeExpression |
                     AdditiveExpression Plus MultiplicativeExpression |
                     AdditiveExpression Minus MultiplicativeExpression
MultiplicativeExpression = ShiftExpression |
                           MultiplicativeExpression Star          ShiftExpression |
                           MultiplicativeExpression ForwardSlash  ShiftExpression |
                           MultiplicativeExpression Percent       ShiftExpression |
                           MultiplicativeExpression DoublePercent ShiftExpression
ShiftExpression = TupleIndexExpression |
                  ShiftExpression DoubleLAngle TupleIndexExpression |
                  ShiftExpression DoubleRAngle TupleIndexExpression |
                  ShiftExpression TripleRAngle TupleIndexExpression
TupleIndexExpression = UnaryExpression | TupleIndexExpression ExclaimationMark IntegerLiteral
UnaryExpression = Primary |
                  CastKeyword LAngle Type RAngle UnaryExpression |
                  Minus UnaryExpression |
                  Tilde UnaryExpression |
                  ExclaimationMark UnaryExpression
Primary = IntegerLiteral | DoubleLiteral | TrueKeyword | FalseKeyword |
          Name |
          Primary LSquare TupleExpression RSquare |
          NewKeyword Dimensions Type |
          NewKeyword LSquare RSquare Type LBrace RBrace |
          NewKeyword LSquare RSquare Type LBrace ExpressionList RBrace |
          Primary Dot Name |
          FunctionCallExpression |
          LParen TupleExpression RParen
FunctionCallExpression = Name LParen ExpressionList RParen | Name LParen RParen
ExpressionList = Expression | ExpressionList Comma Expression

Dimensions = LSquare TupleExpression RSquare | Dimensions LSquare TupleExpression RSquare
